!(function () {
    angular.module('app', ['oc.lazyLoad', 'ui.router', 'angular-loading-bar', 'ngCookies', 'mgcrea.ngStrap'])
        .config(httpConfig)
        .config(lazyLoadConfig)
        .config(routeConfig)
        .config(loadingBar)
        .run(runInit);
})();
function httpConfig($httpProvider, $locationProvider) {
    // Use x-www-form-urlencoded Content-Type
    $httpProvider.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
    $httpProvider.defaults.headers.patch['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
    $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';

    // set up global transformRequest function
    $httpProvider.defaults.transformRequest = function (data) {
        if (data === undefined) {
            return data;
        }
        return $.param(data);
    };

    //$locationProvider.html5Mode(true);
}
function lazyLoadConfig($ocLazyLoadProvider) {
    $ocLazyLoadProvider.config({
        modules: [
            {
                name: 'angular-chart',
                files: [
                    'lib/chartjs/Chart.js',
                    'lib/angular-chart/angular-chart.css',
                    'lib/angular-chart/angular-chart.js'
                ]
            }, {
                name: 'datepicker',
                files: [
                    'js/directives/datepicker/datepicker.css',
                    'js/directives/datepicker/datepicker.js'
                ]
            }
        ]
    });
}
function routeConfig($stateProvider, $urlRouterProvider, $ocLazyLoadProvider) {
    var _lazyLoad = function (loaded) {
        return function ($ocLazyLoad) {
            return $ocLazyLoad.load(loaded, {serie: true});
        };
    };
    $ocLazyLoadProvider.config({
        debug: false,
        events: true
    });
    $urlRouterProvider.otherwise("/boxOffice/");
    $stateProvider
        .state('404', {
            url: '/404',
            templateUrl: '404.html'
        })
        .state('login', {
            url: '/login',
            templateUrl: 'login.html',
            controller: 'LoginCtrl',
            controllerAs: 'login',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/loginCtrl.js'])
            }
        })

        // 首页
        .state('boxOffice', {
            url: '/boxOffice/:date',
            templateUrl: 'view/boxOffice.html',
            controller: 'BoxOfficeCtrl',
            controllerAs: 'boxOffice',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/boxOfficeCtrl.js'])
            }
        })
        //02推荐排片
        .state('recommendedFilm', {
            url: '/recommendedFilm/:date',
            templateUrl: 'view/recommendedFilm.html',
            controller: 'recommendedFilmCtrl',
            controllerAs: 'recommendedFilm',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/recommendedFilm.js'])
            }
        })
        //01预排片
        .state('preOffice', {
            url: '/preOffice/:date',
            templateUrl: 'view/preOffice.html',
            controller: 'PreOfficeCtrl',
            controllerAs: 'preOffice',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/preOffice.js'])
            }
        })
        //012预排片影城
        .state('preStudios', {
            url: '/preStudios/:date',
            templateUrl: 'view/preStudios.html',
            controller: 'PreStudiosCtrl',
            controllerAs: 'preStudios',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/preStudios.js'])
            }
        })
        //03影片票房
        .state('filmBoxOffice', {
            url: '/filmBoxOffice/:date/:id',
            templateUrl: 'view/filmBoxOffice.html',
            controller: 'filmBoxOfficeCtrl',
            controllerAs: 'filmBoxOffice',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/filmBoxOffice.js'])
            }
        })
        //04影片排名
        .state('filmRanking', {
            url: '/filmRanking/:date',
            templateUrl: 'view/filmRanking.html',
            controller: 'filmRankingCtrl',
            controllerAs: 'filmRanking',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/filmRanking.js'])
            }
        })
        //05所有影城
        .state('allCinema', {
            url: '/allCinema/:data/:id',
            templateUrl: 'view/allCinema.html',
            controller: 'allCinemaCtrl',
            controllerAs: 'allCinema',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/allCinema.js'])
            }
        })
        //06单个影城
        .state('singleCinema', {
            url: '/singleCinema/:date/:id',
            templateUrl: 'view/singleCinema.html',
            controller: 'singleCinemaCtrl',
            controllerAs: 'singleCinema',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/singleCinema.js'])
            }
        })
        .state('datePick', {
            url: '/datePick/:status/:date',
            templateUrl: 'view/datePick.html',
            controller: 'DatePickCtrl',
            controllerAs: 'datePick',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/datePickCtrl.js', 'datepicker'])
            }
        });



/*
// 首页-票房-影片详情（日票房）
        .state('dayBoxoffice', {
            url: '/dayBoxoffice/:id',
            templateUrl: 'view/dayBoxoffice.html',
            controller: 'FilmDetailCtrl',
            controllerAs: 'filmDetail',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/filmDetailCtrl.js'])
            }
        })
        // 首页-票房-影片详情（观影趋势）
        .state('viewingTrend', {
            url: '/viewingTrend/:id',
            templateUrl: 'view/viewingTrend.html',
            controller: 'FilmDetailCtrl',
            controllerAs: 'filmDetail',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/filmDetailCtrl.js'])
            }
        })
        // 首页-票房-影片详情-更多详情页
        .state('filmDetail', {
            url: '/filmDetail/:id',
            templateUrl: 'view/filmDetail.html',
            controller: 'FilmDetailCtrl',
            controllerAs: 'filmDetail',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/filmDetailCtrl.js'])
            }
        })
        // 首页-排片（推荐比例）
        .state('groomRowPieceInstall', {
            url: '/groomRowPieceInstall/:date',
            templateUrl: 'view/groomRowPieceInstall.html',
            controller: 'RowPieceCtrl',
            controllerAs: 'rowPiece',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/rowPieceCtrl.js'])
            }
        })
        // 首页-排片（大盘比例）
        .state('grailRowPieceInstall', {
            url: '/grailRowPieceInstall/:date',
            templateUrl: 'view/grailRowPieceInstall.html',
            controller: 'RowPieceCtrl',
            controllerAs: 'rowPiece',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/rowPieceCtrl.js'])
            }
        })
        // 首页-排片-新增影片
        .state('filmAnalysis', {
            url: '/filmAnalysis/:date',
            templateUrl: 'view/filmAnalysis.html',
            controller: 'FilmAnalysisCtrl',
            controllerAs: 'filmAnalysis',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/filmAnalysisCtrl.js'])
            }
        })
        // 首页-排片-影片放映设置
        .state('projectionSetting', {
            url: '/projectionSetting/:date',
            templateUrl: 'view/projectionSetting.html',
            controller: 'ProjectionSettingCtrl',
            controllerAs: 'projectionSetting',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/projectionSettingCtrl.js'])
            }
        })
        // 首页-排片-场次详情（列表显示）
        .state('showDetail', {
            url: '/showDetail/:date',
            templateUrl: 'view/showDetail.html',
            controller: 'ShowDetailCtrl',
            controllerAs: 'showDetail',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/showDetailCtrl.js'])
            }
        })
        // 首页-排片-场次详情（图表显示）
        .state('chartShowDetail', {
            url: '/chartShowDetail/:date',
            templateUrl: 'view/chartShowDetail.html',
            controller: 'ShowDetailCtrl',
            controllerAs: 'showDetail',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/showDetailCtrl.js'])
            }
        })*/

        /*// 设置
        .state('install', {
            url: '/install',
            templateUrl: 'view/install.html',
            controller: 'InstallCtrl',
            controllerAs: 'install',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/installCtrl.js'])
            }
        })


        // unknown
        .state('detailsRowPieceInstall', {
            url: '/detailsRowPieceInstall',
            templateUrl: 'view/detailsRowPieceInstall.html',
            controller: 'RowPieceCtrl',
            controllerAs: 'rowPiece',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/rowPieceCtrl.js'])
            }
        })
        .state('detailsRowPieceInstall.finalRowPieceInstall', {
            url: '/finalRowPieceInstall',
            templateUrl: 'view/finalRowPieceInstall.html',
            controller: 'RowPieceCtrl',
            controllerAs: 'rowPiece',
            resolve: {
                loadMyFile: _lazyLoad(['js/controllers/rowPieceCtrl.js'])
            }
        })*/




}
function loadingBar(cfpLoadingBarProvider) {
    cfpLoadingBarProvider.latencyThreshold = 200;
    cfpLoadingBarProvider.includeSpinner = false;
}
function runInit($rootScope) {
    /*
     $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {});*/
    $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {

    });
    $rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {
        //console.log(fromState,toState)
        $rootScope.previousState = fromState.name;
        $rootScope.currentState = toState.name;
        console.log('Previous state:'+$rootScope.previousState);
        console.log('Current state:'+$rootScope.currentState)
    });

    $rootScope.$on('$viewContentLoading', function (event) {
        console.log('视图开始加载');
    });
    $rootScope.$on('$viewContentLoaded', function (event) {
        console.log('视图渲染完毕');
    });

}
